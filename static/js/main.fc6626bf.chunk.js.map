{"version":3,"sources":["assets/images/logo.png","components/Header/index.js","components/Wrapper/index.js","components/Navbar/index.js","components/Container/index.js","components/ColumnHeaders/index.js","utils/API.js","components/List/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","id","src","logo","alt","style","width","height","Wrapper","props","Navbar","type","backgroundColor","placeholder","React","Component","Container","children","ColumnHeaders","onClick","sortEmployees","class","axios","get","List","employees","map","employee","key","login","uuid","picture","thumbnail","name","first","last","title","cell","email","Date","parse","dob","date","toLocaleDateString","App","searchEmployees","API","then","res","console","log","data","results","setState","result","propertyToSort","sortedEmployees","state","sort","a","b","this","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fc6626bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3df4f2cc.png\";","import React from 'react';\nimport './style.css';\nimport logo from '../../assets/images/logo.png';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div id=\"company-name\" className=\"col s12 m12 l12\">\n            <h1>Employee Directory</h1>\n            <img\n              src={logo}\n              alt=\"logo\"\n              style={{ width: '25%', height: '25%' }}\n            />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import './style.css';\n\nimport React from 'react';\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props}></main>;\n}\n\nexport default Wrapper;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport './style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav>\n        <div className=\"filters\">\n          <p>Date of Birth:</p>{' '}\n          <input\n            type=\"date\"\n            style={{ width: '25%', backgroundColor: 'white' }}\n          />{' '}\n          {` `}{' '}\n          <input\n            type=\"date\"\n            style={{ width: '25%', backgroundColor: 'white' }}\n          />\n          <input\n            type=\"text\"\n            style={{ width: '25%', backgroundColor: 'white' }}\n            placeholder=\"Search by name...\"\n          />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './style.css';\n\nfunction Container(props) {\n  return <div className=\"container container-main\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ColumnHeaders(props) {\r\n  return (\r\n    <div className=\"column-headers\">\r\n      <div className=\"image\">\r\n        <p></p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p className=\"sortable\" onClick={() => props.sortEmployees(`name`)}>\r\n          Name<i class=\"tiny material-icons\">arrow_drop_down</i>\r\n        </p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p>Phone</p>\r\n      </div>\r\n      <div className=\"email\">\r\n        <p>Email</p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p className=\"sortable\" onClick={() => props.sortEmployees(`dob`)}>\r\n          DOB<i class=\"tiny material-icons\">arrow_drop_down</i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColumnHeaders;\r\n","import axios from 'axios';\nconst BASEURL = `https://randomuser.me/api/?nat=us&results=100`;\n\nexport default {\n  search() {\n    return axios.get(BASEURL);\n  },\n};\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction List(props) {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {props.employees.map((employee) => (\r\n        <li key={employee.login.uuid} className=\"list-group-item\">\r\n          <div className=\"pic\">\r\n            <img\r\n              src={employee.picture.thumbnail}\r\n              alt={`${employee.name.first} ${employee.name.last}`}\r\n              title={`${employee.name.first} ${employee.name.last}`}\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>{`${employee.name.first} ${employee.name.last}`}</p>\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>{employee.cell}</p>\r\n          </div>\r\n          <div className=\"email\">\r\n            <p>{employee.email}</p>\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>\r\n              {new Date(Date.parse(employee.dob.date)).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\nimport { BrowserRouter as Router /*, Route*/ } from 'react-router-dom';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\nimport ColumnHeaders from './components/ColumnHeaders';\nimport './App.css';\nimport API from './utils/API';\nimport List from './components/List';\n// import Discover from './pages/Discover';\n// import About from './pages/About';\n// import Search from './pages/Search';\n// import Footer from './components/Footer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n    };\n  }\n\n  componentDidMount() {\n    this.searchEmployees();\n  }\n\n  searchEmployees = () => {\n    API.search().then((res) => {\n      console.log(res.data.results);\n      this.setState({ result: res.data.results });\n    });\n  };\n\n  // new Date(Date.parse(employee.dob.date)).toLocaleDateString()\n\n  sortEmployees = (propertyToSort) => {\n    let sortedEmployees;\n    switch (propertyToSort) {\n      case `name`:\n        sortedEmployees = this.state.result.sort((a, b) =>\n          a.name.last > b.name.last ? 1 : -1\n        );\n        this.setState({ result: sortedEmployees });\n        break;\n      case `dob`:\n        sortedEmployees = this.state.result.sort((a, b) =>\n          a.dob.date > b.dob.date ? 1 : -1\n        );\n        this.setState({ result: sortedEmployees });\n        break;\n      default:\n        console.log(`nothing provided`);\n    }\n    // const sortedEmployees = this.state.result.sort(\n    //   (a, b) => a.propertyToSort - b.propertyToSort\n    // );\n    // this.setState({ result: sortedEmployees });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Wrapper>\n            <Navbar />\n            <Container>\n              <ColumnHeaders sortEmployees={this.sortEmployees} />\n              <List employees={this.state.result} />\n            </Container>\n          </Wrapper>\n          {/* <Navbar />\n        <Wrapper>\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/discover\" component={Discover} />\n          <Route exact path=\"/search\" component={Search} />\n        </Wrapper>\n        <Footer /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}