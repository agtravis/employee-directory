{"version":3,"sources":["assets/images/logo.png","utils/API.js","components/Header/index.js","components/Wrapper/index.js","components/DateInput/index.js","components/Button/index.js","components/Navbar/index.js","components/Container/index.js","components/ColumnHeaders/index.js","components/List/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","get","Header","className","id","src","logo","alt","style","width","height","Wrapper","props","DateInput","type","value","onChange","event","field","Button","onClick","whenClicked","args","text","Navbar","state","inputStyle","backgroundColor","paddingLeft","this","filterEmployees","startDate","endDate","handleChange","findByName","searchText","placeholder","onKeyUp","key","React","Component","Container","children","ColumnHeaders","sortEmployees","List","employees","map","employee","login","uuid","picture","thumbnail","name","first","last","title","cell","email","Date","dob","date","toLocaleDateString","App","setState","target","searchEmployees","API","then","res","result","data","results","searchString","toLowerCase","foundByName","filter","indexOf","start","end","filteredEmployees","propertyToSort","sortedEmployees","sortStatus","lastSort","sort","a","b","console","log","search","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b08325c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3df4f2cc.png\";","import axios from 'axios';\nconst BASEURL = `https://randomuser.me/api/?nat=us&results=100`;\n\nexport default {\n  search() {\n    return axios.get(BASEURL);\n  },\n};\n","import React from 'react';\nimport './style.css';\nimport logo from '../../assets/images/logo.png';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div id=\"company-name\" className=\"col s12 m12 l12\">\n            <h1>Employee Directory</h1>\n            <img\n              src={logo}\n              alt=\"logo\"\n              style={{ width: '25%', height: '25%' }}\n            />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import './style.css';\n\nimport React from 'react';\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props}></main>;\n}\n\nexport default Wrapper;\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction DateInput(props) {\r\n  return (\r\n    <input\r\n      type=\"date\"\r\n      style={props.style}\r\n      value={props.value}\r\n      onChange={(event) => props.onChange(event, props.field)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DateInput;\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport './style.css';\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      className=\"dobSearch\"\r\n      onClick={() => props.whenClicked(...props.args)}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport './style.css';\nimport DateInput from '../DateInput';\nimport Button from '../Button';\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputStyle: {\n        width: '20%',\n        backgroundColor: 'white',\n        paddingLeft: '5px',\n      },\n    };\n  }\n  render() {\n    return (\n      <nav>\n        <div className=\"filters\">\n          <Button\n            whenClicked={this.props.filterEmployees}\n            args={[this.props.startDate, this.props.endDate]}\n            text={`Find by Date of Birth:`}\n          />\n          <DateInput\n            style={this.state.inputStyle}\n            value={this.props.startDate}\n            onChange={this.props.handleChange}\n            field={`startDate`}\n          />\n          <DateInput\n            style={this.state.inputStyle}\n            value={this.props.endDate}\n            onChange={this.props.handleChange}\n            field={`endDate`}\n          />\n          <Button\n            whenClicked={this.props.findByName}\n            args={[this.props.searchText]}\n            text={`Search by Name:`}\n          />\n          <input\n            id=\"name\"\n            type=\"text\"\n            style={this.state.inputStyle}\n            placeholder=\"Enter full or partial name\"\n            value={this.props.searchText}\n            onChange={(event) => this.props.handleChange(event, `search`)}\n            onKeyUp={(event) => {\n              if (event.key === `Enter`) {\n                this.props.findByName(this.props.searchText);\n              }\n            }}\n          />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './style.css';\n\nfunction Container(props) {\n  return <div className=\"container container-main\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ColumnHeaders(props) {\r\n  return (\r\n    <div className=\"column-headers\">\r\n      <div className=\"image\">\r\n        <p></p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p className=\"sortable\" onClick={() => props.sortEmployees(`name`)}>\r\n          Name<i className=\"tiny material-icons\">arrow_drop_down</i>\r\n        </p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p>Phone</p>\r\n      </div>\r\n      <div className=\"email\">\r\n        <p>Email</p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p className=\"sortable\" onClick={() => props.sortEmployees(`dob`)}>\r\n          DOB<i className=\"tiny material-icons\">arrow_drop_down</i>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColumnHeaders;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction List(props) {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {props.employees.map((employee) => (\r\n        <li key={employee.login.uuid} className=\"list-group-item\">\r\n          <div className=\"pic\">\r\n            <img\r\n              src={employee.picture.thumbnail}\r\n              alt={`${employee.name.first} ${employee.name.last}`}\r\n              title={`${employee.name.first} ${employee.name.last}`}\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>{`${employee.name.first} ${employee.name.last}`}</p>\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>{employee.cell}</p>\r\n          </div>\r\n          <div className=\"email\">\r\n            <p>{employee.email}</p>\r\n          </div>\r\n          <div className=\"info\">\r\n            <p>{new Date(employee.dob.date).toLocaleDateString()}</p>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\nimport API from './utils/API';\nimport './App.css';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\nimport ColumnHeaders from './components/ColumnHeaders';\nimport List from './components/List';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: [],\n      lastSort: ``,\n      search: ``,\n      startDate: `1980-01-01`,\n      endDate: `1990-01-01`,\n    };\n  }\n\n  componentDidMount() {\n    this.searchEmployees();\n  }\n\n  handleChange = (event, field) => {\n    this.setState({ [field]: event.target.value });\n  };\n\n  searchEmployees = () => {\n    API.search().then((res) => {\n      this.setState({ result: res.data.results });\n    });\n  };\n\n  findByName = (searchString) => {\n    searchString = searchString.toLowerCase();\n    const foundByName = [...this.state.result].filter((employee) => {\n      return (\n        employee.name.first.toLowerCase().indexOf(searchString) !== -1 ||\n        employee.name.last.toLowerCase().indexOf(searchString) !== -1\n      );\n    });\n    this.setState({ result: foundByName });\n  };\n\n  filterEmployees = (startDate, endDate) => {\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n    const filteredEmployees = [...this.state.result].filter((employee) => {\n      let date = new Date(employee.dob.date);\n      return date >= start && date <= end;\n    });\n    this.setState({ result: filteredEmployees });\n  };\n\n  sortEmployees = (propertyToSort) => {\n    let sortedEmployees;\n    let sortStatus;\n    switch (propertyToSort) {\n      case `name`:\n        if (this.state.lastSort !== propertyToSort) {\n          sortedEmployees = this.state.result.sort((a, b) =>\n            a.name.last > b.name.last ? 1 : -1\n          );\n          sortStatus = propertyToSort;\n        } else {\n          sortedEmployees = this.state.result.sort((a, b) =>\n            a.name.last > b.name.last ? -1 : 1\n          );\n          sortStatus = ``;\n        }\n        this.setState({ result: sortedEmployees, lastSort: sortStatus });\n        break;\n      case `dob`:\n        if (this.state.lastSort !== propertyToSort) {\n          sortedEmployees = this.state.result.sort((a, b) =>\n            a.dob.date > b.dob.date ? 1 : -1\n          );\n          sortStatus = propertyToSort;\n        } else {\n          sortedEmployees = this.state.result.sort((a, b) =>\n            a.dob.date > b.dob.date ? -1 : 1\n          );\n          sortStatus = ``;\n        }\n        this.setState({ result: sortedEmployees, lastSort: sortStatus });\n        break;\n      default:\n        console.log(`nothing provided`);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Wrapper>\n          <Navbar\n            filterEmployees={this.filterEmployees}\n            findByName={this.findByName}\n            handleChange={this.handleChange}\n            searchText={this.state.search}\n            startDate={this.state.startDate}\n            endDate={this.state.endDate}\n          />\n          <Container>\n            <ColumnHeaders sortEmployees={this.sortEmployees} />\n            <List employees={this.state.result} />\n          </Container>\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}